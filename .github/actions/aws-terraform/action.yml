name: AWS Terraform
description: Runs Terraform against HackneyAWS
inputs:
  aws_region:
    description: 'AWS region to use'
    default: 'eu-west-2'
    required: true  
  aws_s3_bucket:
    description: 'S3 bucket to use for Terraform state'
    required: true
  aws_account:  
    description: 'AWS Account to deploy to'
    required: true
  aws_iam_role:
    description: 'AWS IAM role to assume'
    required: true
  build_path:
    description: 'Build path that contains the source'
    required: true
  environment:
    description: 'Name of the environemnt to target'
    required: true

runs:
  using: "composite"
  steps:
#       - name: Configure AWS credentials for Account
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.aws_region }}
#           role-to-assume: ci-account_name-${{ github.event.client_payload.sha }}
#           role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
#           role-duration-seconds: 1200
#           role-session-name: GH-${{ env.GITHUB_WORKFLOW }}-${{ env.GITHUB_RUN_ID }}

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="region=${{ inputs.aws_region }}" -backend-config="bucket=${{ inputs.aws_s3_bucket }}" -backend-config="key=${{ inputs.environment }}/terraform.state"
      shell: bash
      working-directory: "${{ inputs.build_path }}/terraform"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      shell: bash
      working-directory: "${{ inputs.build_path }}/terraform"

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      shell: bash
      working-directory: "${{ inputs.build_path }}/terraform"   

    - name: Terraform Apply
      id: apply
      run: terraform plan
      shell: bash
      working-directory: "${{ inputs.build_path }}/terraform"
