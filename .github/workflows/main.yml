name: AWS Terraform
env:
  aws_region: 'eu-west-2'
  terraform_version: 'latest'  
on:
  workflow_dispatch:
    inputs:
      terraform_project_path:
        description: 'Terraform Project Path e.g. projects/academy/terraform'     
        required: true
    
  push:
    branches: [ $default-branch ]
    paths:
      - "modules/**"
      - "platform/**"
      - "projects/**"
  pull_request:
    branches: [ $default-branch ]
    paths:
      - "modules/**"
      - "platform/**"
      - "projects/**"

jobs:
  build:
    name: Run Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2       

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.terraform_version }}
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Terraform Apply
        id: apply
        run: terraform plan
        if:
          contains('
            $default-branch
          ', github.ref)
            
